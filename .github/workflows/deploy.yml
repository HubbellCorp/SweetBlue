name: 'SweetBlue Release'

on:

  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    # Using the release environment for this step will force a manual approval in github
    # before it can proceed
    environment:
      name: Release

    steps:
      - uses: actions/checkout@v3

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build Library And Sample Apps
        run: ./gradlew assembleRelease

  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Run tests
      - name: Run Tests
        run: ./gradlew testReleaseUnitTest

      # Publish unit test results
      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Publish Unit Test Results
          path: '**/build/test-results/**/*.xml'
          reporter: java-junit

  StaticAnalysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Run static analysis
      - name: Android Lint
        run: ./gradlew lintRelease

      # Publish lint results to job summary
      - uses: iDevicesInc/action-android-lint@prettier_lint_results
        if: always()
        with:
          name: SweetBlue Release Lint Results
          report-path: '**/build/reports/*.xml'
        continue-on-error: false

  PrepDeploy:
    runs-on: ubuntu-latest
    # Using the release environment for this step will force a manual approval in github
    # before it can proceed
    environment:
      name: Release

    needs: [Build, Test, StaticAnalysis]

    steps:
      - uses: actions/checkout@v3

      # This may be redundant, but we should make sure the documentation is up-to-date, just in case
      - name: Update Documentation
        run: ./gradlew bumpMarkdown

      # Generate javadoc again to make sure it's current
      - name: Generate javadoc
        run: ./gradlew gendocs

      # Replace javadoc folder with the latest docs just generated
      - name: Replace javadocs
        run: |
          rm -rf docs/
          mkdir docs/
          cp -r javadocs/* docs/

      # Have gradle write out the current version
      - name: Write version file
        run: ./gradlew writeVersionFile

      # Read the current version file, and put it into an env variable, to be used in future jobs/steps
      - name: Set version environment variable
        run: echo "SWEETBLUE_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      # Commit any changes
      - name: Commit documentation updates
        uses: EndBug/add-and-commit@v9
        with:
          add: '-u'
          message: Update documentation for release ${{ env.SWEETBLUE_VERSION }}

  Deploy:
    runs-on: ubuntu-latest
    # Using the release environment for this step will force a manual approval in github
    # before it can proceed
    environment:
      name: Release

    needs: PrepDeploy
    steps:
      - uses: actions/checkout@v3

      # Have gradle write out the current version (it seems when using environments, env vars do not carry
      # over from job to job, so we need to get it again here)
      - name: Write version file
        run: ./gradlew writeVersionFile

      # Read the current version file, and put it into an env variable, to be used in future jobs/steps
      - name: Set version environment variable
        run: echo "SWEETBLUE_VERSION=$(cat version.txt)" >> $GITHUB_ENV

      # Create a tag for the release
      - uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          customTag: v${{ env.SWEETBLUE_VERSION }}

      # Now build the artifacts, and javadocs jars, and publish to Azure Artifacts
      - name: Deploy to Azure
        env:
          AZURE_ARTIFACTS_ENV_ACCESS_TOKEN: ${{ secrets.AZURE_ARTIFACTS_ENV_ACCESS_TOKEN }}
        run: ./gradlew assembleRelease sbjavadocJar publish

      - name: Deploy markdown to wiki
        uses: SwiftDocOrg/github-wiki-publish-action@v1
        with:
          path: "markdown"
        env:
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}


  PostDeployment:
    runs-on: ubuntu-latest

    needs: Deploy
    steps:
      - uses: actions/checkout@v3
        # Make sure we get the latest on the branch, as a commit may have been made earlier
        with:
          ref: ${{ GITHUB_REF_NAME }}

      - name: Merge into main
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ github.token }}

      - name: Bump version
        run: ./gradlew bumpVersionName

      - name: Update Documentation
        run: ./gradlew bumpMarkdown

      - name: Commit
        uses: EndBug/add-and-commit@v9
        with:
          add: '-u'
          message: 'Bump version'
